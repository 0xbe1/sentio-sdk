#load("@processor-sdk//webpack-cli:index.bzl", webpack = "webpack_cli")
load("@processor-sdk//ts-mocha:index.bzl", "ts_mocha_test")
load("@processor-sdk//typescript:index.bzl", "tsc")
load("@processor-sdk//@bazel/typescript:index.bzl", "ts_project")
load("@build_bazel_rules_nodejs//:index.bzl", "nodejs_binary", "pkg_npm")
load("@aspect_bazel_lib//lib:write_source_files.bzl", "write_source_files")
load("@io_bazel_rules_docker//nodejs:image.bzl", "nodejs_image")

ts_project(
    name = "compile",
    srcs = glob(
        [
            "src/**/*.ts",
        ],
        exclude = [
            "**/*.test.ts",
            "src/test_case/**",
            #            "src/target-ethers-sentio/**",
        ],
    ),
    #    data = [
    #        ":package.json",
    #    ],
    declaration = True,
    resolve_json_module = True,
    source_map = True,
    visibility = ["//visibility:public"],
    deps = [
        "@processor-sdk//:node_modules",
    ],
)

nodejs_binary(
    name = "server",
    data = [
        ":chains-config.json",
        ":compile",
    ],
    entry_point = "src/processor.js",
    visibility = ["//visibility:public"],
)

nodejs_image(
    name = "image",
    data = [
        ":server",
    ],
    entry_point = "src/processor.js",
    include_node_repo_args = False,
    node_repository_name = "nodejs_linux_amd64",
    tags = [
        "deploy",
        "manual",
    ],
    visibility = ["//visibility:public"],
)

filegroup(
    name = "packageJson",
    srcs = ["package.json"],
    visibility = ["//visibility:public"],
)

filegroup(
    name = "srcs",
    srcs = glob([
        "chains-config.json",
        "src/**/*.ts",
        "src/test_case/solana-abis/*.json",
    ]) + [
        ":tsconfig.json",
        ":package.json",
    ],
)

pkg_npm(
    name = "npm_package",
    package_name = "@sentio/sdk",
    srcs = ["package.json"],
    visibility = ["//visibility:public"],
    deps = [":compile"],
)

ts_mocha_test(
    name = "test",
    testonly = True,
    args = [
        "--paths",
        "src/**/*.test.ts",
    ],
    chdir = package_name(),
    data = [
        ":srcs",
        "@processor-sdk//:node_modules",
    ],
)

#webpack(
#    name = "bundle",
#    outs = ["dist/server.js"],
#    args = [
#        "-o",
#        "../../$(@D)",  # because of chdir we need to do for webpack
#    ],
#    chdir = package_name(),
#    data = [
#        ":srcs",
#        ":webpack.config.js",
#        "@processor-sdk//:node_modules",
#    ],
#    visibility = ["//visibility:public"],
#)

write_source_files(
    name = "write_gen",
    files = {
        "src/gen/processor/protos/processor.ts": "//processor/protos:processor_ts_proto",
        "src/gen/google/protobuf/empty.ts": "//processor/protos:empty_ts_proto",
    },
)
